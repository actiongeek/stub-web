'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ActivityIndicator = require('./ActivityIndicator');

var _ActivityIndicator2 = _interopRequireDefault(_ActivityIndicator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Button = function (_PureComponent) {
	(0, _inherits3.default)(Button, _PureComponent);

	function Button() {
		(0, _classCallCheck3.default)(this, Button);

		var _this = (0, _possibleConstructorReturn3.default)(this, (Button.__proto__ || (0, _getPrototypeOf2.default)(Button)).call(this));

		_this.link_on_click = _this.link_on_click.bind(_this);
		_this.button_on_click = _this.button_on_click.bind(_this);
		return _this;
	}

	(0, _createClass3.default)(Button, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    disabled = _props.disabled,
			    busy = _props.busy,
			    submit = _props.submit,
			    title = _props.title,
			    stretch = _props.stretch,
			    style = _props.style,
			    className = _props.className;


			var markup = _react2.default.createElement(
				'div',
				{
					className: (0, _classnames2.default)('rrui__input', 'rrui__button', {
						'rrui__button--busy': busy,
						'rrui__button--disabled': disabled,
						'rrui__button--stretch': stretch
					}, className),
					style: style },
				_react2.default.createElement(_ActivityIndicator2.default, {
					className: (0, _classnames2.default)('rrui__button__activity-indicator', {
						// CSS selector performance optimization
						'rrui__button__activity-indicator--busy': busy
					}) }),
				this.render_button()
			);

			return markup;
		}
	}, {
		key: 'render_button',
		value: function render_button() {
			var _this2 = this;

			var _props2 = this.props,
			    link = _props2.link,
			    linkDownload = _props2.linkDownload,
			    title = _props2.title,
			    busy = _props2.busy,
			    disabled = _props2.disabled,
			    submit = _props2.submit,
			    buttonStyle = _props2.buttonStyle,
			    children = _props2.children;


			var className = (0, _classnames2.default)('rrui__button__button', {
				'rrui__button__button--link': link,
				// CSS selector performance optimization
				'rrui__button__button--busy': busy,
				'rrui__button__button--disabled': disabled
			});

			var properties = {
				ref: function ref(_ref) {
					return _this2.button = _ref;
				},
				title: title,
				className: className,
				style: buttonStyle
			};

			var contents = _react2.default.createElement(
				'div',
				{
					className: (0, _classnames2.default)('rrui__button__contents', {
						// CSS selector performance optimization
						'rrui__button__contents--busy': busy
					}) },
				children
			);

			if (link) {
				var _markup = _react2.default.createElement(
					'a',
					(0, _extends3.default)({
						href: link,
						download: linkDownload,
						onClick: this.link_on_click
					}, properties),
					contents
				);

				return _markup;
			}

			var markup = _react2.default.createElement(
				'button',
				(0, _extends3.default)({
					type: submit ? 'submit' : 'button',
					disabled: busy || disabled,
					onClick: this.button_on_click
				}, properties),
				contents
			);

			return markup;
		}
	}, {
		key: 'focus',
		value: function focus() {
			_reactDom2.default.findDOMNode(this.button).focus();
		}
	}, {
		key: 'link_on_click',
		value: function link_on_click(event) {
			var _props3 = this.props,
			    busy = _props3.busy,
			    disabled = _props3.disabled,
			    action = _props3.action;

			// Only handle left mouse button clicks
			// ignoring those ones with a modifier key pressed

			if (event.button !== 0 || event.shiftKey || event.altKey || event.ctrlKey || event.metaKey) {
				return;
			}

			if (busy || disabled) {
				return;
			}

			// Could be just a "submit" button without having any `action`.
			// Could also be just a `link` button.
			// Therefore "preventing default" only if `action` is set:
			// for example, if `link` is set and no `action`
			// then it should proceed with navigating to the `link`.
			// And if `link` is set and `action` is specified too
			// then it will prevent it from navigating to the `link`.
			if (action) {
				event.preventDefault();
				action();
			}
		}
	}, {
		key: 'button_on_click',
		value: function button_on_click(event) {
			var action = this.props.action;

			// Could be just a "submit" button

			if (action) {
				action();
			}
		}
	}]);
	return Button;
}(_react.PureComponent);

Button.propTypes = {
	// onClick handler
	action: _propTypes2.default.func,

	// If `busy` is `true` then the button
	// will be disabled and a spinner will be shown.
	busy: _propTypes2.default.bool,

	// Disables the button
	disabled: _propTypes2.default.bool,

	// When `true`, the button will submit an enclosing form.
	submit: _propTypes2.default.bool,

	// If `link` is set, then the button is gonna be an <a/> tag.
	link: _propTypes2.default.string,

	// `<a download="..."/>` HTML attribute
	linkDownload: _propTypes2.default.string,

	// HTML `title` attribute
	title: _propTypes2.default.string,

	// Set to `true` to stretch the button to full width
	stretch: _propTypes2.default.bool.isRequired,

	// CSS class name
	className: _propTypes2.default.string,

	// CSS style object for the button container
	style: _propTypes2.default.object,

	// CSS style object for the button itself
	buttonStyle: _propTypes2.default.object
};
Button.defaultProps = {
	// Set to `true` to stretch the button to full width
	stretch: false
};
exports.default = Button;
//# sourceMappingURL=Button.js.map