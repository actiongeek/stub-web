'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Page_and_menu = function (_Component) {
	(0, _inherits3.default)(Page_and_menu, _Component);

	// state =
	// {
	// 	show_menu  : false,
	// 	menu_width : 0,
	// 	page_moved_aside : false
	// }

	function Page_and_menu() {
		(0, _classCallCheck3.default)(this, Page_and_menu);

		var _this = (0, _possibleConstructorReturn3.default)(this, (Page_and_menu.__proto__ || (0, _getPrototypeOf2.default)(Page_and_menu)).call(this));

		_this.hide_menu_on_mouse_down = _this.hide_menu_on_mouse_down.bind(_this);
		// this.toggle_menu        = this.toggle_menu.bind(this)
		// this.update_menu_width  = this.update_menu_width.bind(this)
		return _this;
	}

	(0, _createClass3.default)(Page_and_menu, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    children = _props.children,
			    rest = (0, _objectWithoutProperties3.default)(_props, ['children']);


			var markup = _react2.default.createElement(
				'div',
				(0, _extends3.default)({
					onTouchStart: this.hide_menu_on_mouse_down,
					onMouseDown: this.hide_menu_on_mouse_down
				}, rest),
				children
			);

			return markup;
		}
	}, {
		key: 'hide_menu_on_mouse_down',
		value: function hide_menu_on_mouse_down(event) {
			if (!this.menu || !this.menu_button) {
				return;
			}

			// Hide the menu only if clicked outside
			if (this.menu.element().contains(event.target) || this.menu_button.element().contains(event.target)) {
				return;
			}

			this.menu.hide();
		}

		// toggle_menu()
		// {
		// 	if (!this.state.show_menu)
		// 	{
		// 		return this.setState({ show_menu: !this.state.show_menu, page_moved_aside: !this.state.page_moved_aside })
		// 	}
		//
		// 	this.setState({ show_menu: !this.state.show_menu }, () =>
		// 	{
		// 		// Requires a corresponding `clearTimeout()`` in `componentWillUnmount()``
		// 		setTimeout(() =>
		// 		{
		// 			this.setState({ page_moved_aside: this.state.show_menu })
		// 		},
		// 		menu_transition_duration)
		// 	})
		// }

		// update_menu_width(width)
		// {
		// 	this.setState({ menu_width: width })
		// }

	}, {
		key: 'getChildContext',
		value: function getChildContext() {
			var _this2 = this;

			var context = {
				react_responsive_ui_menu: {
					toggle: function toggle() {
						return _this2.menu.toggle();
					},

					register: function register(menu) {
						if (_this2.menu) {
							throw new Error('There already is a menu registered for this page');
						}

						_this2.menu = menu;

						return function () {
							return _this2.menu = undefined;
						};
					},

					register_menu_button: function register_menu_button(menu_button) {
						if (_this2.menu_button) {
							throw new Error('There already is a menu button registered for this page');
						}

						_this2.menu_button = menu_button;

						return function () {
							return _this2.menu_button = undefined;
						};
					}
				}
			};

			return context;
		}
	}]);
	return Page_and_menu;
}(_react.Component);

Page_and_menu.childContextTypes = {
	react_responsive_ui_menu: _propTypes2.default.shape({
		toggle: _propTypes2.default.func.isRequired,
		register: _propTypes2.default.func.isRequired
	}).isRequired
};
exports.default = Page_and_menu;
//# sourceMappingURL=PageAndMenu.js.map