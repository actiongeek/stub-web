{"version":3,"sources":["../source/Menu.js"],"names":["Menu","state","show","context","router","react_responsive_ui_menu","register","toggle","unlisten_history","listen","location","unregister","hide","setState","element","findDOMNode","menu","props","className","style","children","markup","ref","propTypes","object","string","contextTypes","childContextTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA;IACqBA,I;;;;;;;;;;;;;;sMAiBpBC,K,GACA;AACCC,SAAM;AADP,G;;;;;sCAKA;AAAA;;AAAA,kBAUG,KAAKC,OAVR;AAAA,OAGEC,MAHF,YAGEA,MAHF;AAAA,wCAIEC,wBAJF;AAAA,OAMGC,QANH,yBAMGA,QANH;AAAA,OAOGC,MAPH,yBAOGA,MAPH;AAAA,OAYSL,IAZT,GAYkB,KAAKD,KAZvB,CAYSC,IAZT;;AAcC;AACA;AACA;AACA;;AAEA;;AACA,OAAIE,MAAJ,EACA;AACC;AACA,SAAKI,gBAAL,GAAwBJ,OAAOK,MAAP,CAAc,UAACC,QAAD,EACtC;AACC,SAAI,OAAKT,KAAL,CAAWC,IAAf,EACA;AACCK;AACA;AACD,KANuB,CAAxB;AAOA;;AAED,QAAKI,UAAL,GAAkBL,SACjB;AACAM,UAAU;AAAA,YAAM,OAAKC,QAAL,CAAc,EAAEX,MAAM,KAAR,EAAd,CAAN;AAAA,KADV;AAEAK,YAAU;AAAA,YAAM,OAAKM,QAAL,CAAc;AAAA,aAAU,EAAEX,MAAM,CAACD,MAAMC,IAAf,EAAV;AAAA,MAAd,CAAN;AAAA,KAFV;AAGAY,aAAU;AAAA,YAAM,mBAASC,WAAT,CAAqB,OAAKC,IAA1B,CAAN;AAAA;AAHV,IADiB,CAAlB;;AAOA;AACA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;yCAGA;AACC;;AAEA;AACA;AACA;AACA;;AAEA,QAAKL,UAAL;;AAEA,OAAI,KAAKH,gBAAT,EACA;AACC,SAAKA,gBAAL;AACA;AACD;;;2BAGD;AAAA;;AAAA,gBACwC,KAAKS,KAD7C;AAAA,OACSC,SADT,UACSA,SADT;AAAA,OACoBC,KADpB,UACoBA,KADpB;AAAA,OAC2BC,QAD3B,UAC2BA,QAD3B;AAAA,OAESlB,IAFT,GAEkB,KAAKD,KAFvB,CAESC,IAFT;;;AAIC,OAAMmB,SAEL;AAAA;AAAA;AACC,UAAM;AAAA,aAAO,OAAKL,IAAL,GAAYM,KAAnB;AAAA,MADP;AAEC,gBAAY,0BAAW,qBAAX,EACZ;AACC,oCAA8BpB;AAD/B,MADY,EAIZgB,SAJY,CAFb;AAOC,YAAQC,KAPT;AAQGC;AARH,IAFD;;AAcA,UAAOC,MAAP;AACA;;AAED;AACA;AACA;AACA;AACA;;;;;;AA5HoBrB,I,CAEbuB,S,GACP;AACC;AACAJ,QAAQ,oBAAUK,MAFnB;;AAIC;AACAN,YAAY,oBAAUO;AALvB,C;AAHoBzB,I,CAWb0B,Y;AAENtB,SAAS,oBAAUoB,M,IAChB,sBAAYG,iB;kBAdI3B,I","file":"Menu.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport classNames from 'classnames'\n\nimport PageAndMenu from './PageAndMenu'\n\n// A slideout menu\nexport default class Menu extends PureComponent\n{\n\tstatic propTypes =\n\t{\n\t\t// CSS style object\n\t\tstyle : PropTypes.object,\n\n\t\t// CSS class\n\t\tclassName : PropTypes.string\n\t}\n\n\tstatic contextTypes =\n\t{\n\t\trouter : PropTypes.object, // .isRequired, // `react-router` may not be used at all\n\t\t...PageAndMenu.childContextTypes\n\t}\n\n\tstate =\n\t{\n\t\tshow: false\n\t}\n\n\tcomponentDidMount()\n\t{\n\t\tconst\n\t\t{\n\t\t\trouter,\n\t\t\treact_responsive_ui_menu:\n\t\t\t{\n\t\t\t\tregister,\n\t\t\t\ttoggle\n\t\t\t}\n\t\t}\n\t\t= this.context\n\n\t\tconst { show } = this.state\n\n\t\t// if (!slideout)\n\t\t// {\n\t\t// \treturn\n\t\t// }\n\n\t\t// If `react-router` is being used\n\t\tif (router)\n\t\t{\n\t\t\t// Hide slideout menu on navigation\n\t\t\tthis.unlisten_history = router.listen((location) =>\n\t\t\t{\n\t\t\t\tif (this.state.show)\n\t\t\t\t{\n\t\t\t\t\ttoggle()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.unregister = register\n\t\t({\n\t\t\thide    : () => this.setState({ show: false }),\n\t\t\ttoggle  : () => this.setState(state => ({ show: !state.show })),\n\t\t\telement : () => ReactDOM.findDOMNode(this.menu)\n\t\t})\n\n\t\t// this.calculate_width()\n\t}\n\n\t// componentDidUpdate(previous_props, previous_state)\n\t// {\n\t// \t// On menu toggle\n\t// \tif (this.state.show !== previous_state.show)\n\t// \t{\n\t// \t\t// Requires a corresponding `clearTimeout()`` in `componentWillUnmount()``\n\t// \t\tsetTimeout(() =>\n\t// \t\t{\n\t// \t\t\tthis.setState({ page_moved_aside: this.state.show })\n\t// \t\t},\n\t// \t\tmenu_transition_duration)\n\t//\n\t// \t\tthis.calculate_width()\n\t// \t}\n\t// }\n\n\tcomponentWillUnmount()\n\t{\n\t\t// const { slideout } = this.props\n\n\t\t// if (!slideout)\n\t\t// {\n\t\t// \treturn\n\t\t// }\n\n\t\tthis.unregister()\n\n\t\tif (this.unlisten_history)\n\t\t{\n\t\t\tthis.unlisten_history()\n\t\t}\n\t}\n\n\trender()\n\t{\n\t\tconst { className, style, children } = this.props\n\t\tconst { show } = this.state\n\n\t\tconst markup =\n\t\t(\n\t\t\t<div\n\t\t\t\tref={ ref => this.menu = ref }\n\t\t\t\tclassName={ classNames('rrui__slideout-menu',\n\t\t\t\t{\n\t\t\t\t\t'rrui__slideout-menu--shown': show\n\t\t\t\t},\n\t\t\t\tclassName) }\n\t\t\t\tstyle={ style }>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\t// calculate_width()\n\t// {\n\t// \tconst dom_node = ReactDOM.findDOMNode(this.menu)\n\t// \tthis.props.updateWidth(dom_node.offsetWidth)\n\t// }\n}"]}