{"version":3,"sources":["../source/Modal.js"],"names":["Modal","state","form","register_form","setState","unregister_form","unmounted","on_request_close","event","closeLabel","props","type","indicate_cannot_close","findDOMNode","content","parentNode","focus","close_if_not_busy","busy","close","closeTimeout","could_not_close_because_busy","on_after_open","afterOpen","adjust_scrollbar_after_open","on_after_close","afterClose","reset","adjust_scrollbar_after_close","context","rrui__modal","nextProps","unmount","isOpen","reset_content_scroll","could_not_close_because_busy_animation_timeout","clearTimeout","undefined","fullscreen","contentLabel","title","closeButton","actions","style","className","overlayClassName","children","markup","react_modal_style","ref","could_not_close_because_busy_animation_duration","setTimeout","document","querySelector","scrollTop","div","createElement","position","left","right","body","appendChild","width_before","clientWidth","removeChild","overflow","width_adjustment","get_full_width_elements","element","marginRight","bodyOverflowX","bodyOverflowY","overflowX","overflowY","propTypes","bool","isRequired","func","number","node","string","object","defaultProps","childContextTypes","Modal_content","render_close_button","overlay","top","bottom","full_width_elements","querySelectorAll","push"],"mappings":"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","file":"Modal.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport classNames from 'classnames'\nimport ReactModal from 'react-modal'\n\nimport Button from './Button'\nimport Form from './Form'\n\n// Make sure to add `.rrui__fixed-full-width` CSS class\n// to all full-width `position: fixed` elements.\n// Such elements must not be `width: 100%`\n// but rather `width: auto` or `left: 0; right: 0;`.\nexport default class Modal extends PureComponent\n{\n\tstate =\n\t{\n\t\t// Using a counter instead of a boolean here\n\t\t// because a new form may be mounted before the old one is unmounted.\n\t\t// (React reconciliation algorythm implementation details)\n\t\tform : 0\n\t}\n\n\tstatic propTypes =\n\t{\n\t\t// If `true` then the modal is shown\n\t\tisOpen           : PropTypes.bool.isRequired,\n\n\t\t// Closes the modal (must set the `isOpen` flag to `false`)\n\t\tclose            : PropTypes.func.isRequired,\n\n\t\t// A time required for CSS hiding animation to complete\n\t\t// (150 milliseconds by default)\n\t\tcloseTimeout     : PropTypes.number.isRequired,\n\n\t\t// Is called after the modal is shown\n\t\tafterOpen        : PropTypes.func,\n\n\t\t// Is called after the modal is closed\n\t\tafterClose       : PropTypes.func,\n\n\t\t// Enters fullscreen mode\n\t\tfullscreen       : PropTypes.bool,\n\n\t\t// Modal content\n\t\tchildren         : PropTypes.node,\n\n\t\t// Resets the modal on close\n\t\t// (e.g. could reset edited form fields)\n\t\treset            : PropTypes.func,\n\n\t\t// \"Cancel\" button label.\n\t\t// If set, the modal will have a \"Cancel\" button.\n\t\t// (only if `<Form.Actions/>` is found in content)\n\t\tcloseLabel       : PropTypes.string,\n\n\t\t// The default `overflow-x` of the <body/>.\n\t\t// Is `auto` by default.\n\t\tbodyOverflowX    : PropTypes.string.isRequired,\n\n\t\t// The default `overflow-x` of the <body/>.\n\t\t// Is `scroll` by default\n\t\t// (which is better than `auto`\n\t\t//  because the document width won't be jumpy\n\t\t//  while navigating the website —\n\t\t//  it will be consistent across all pages)\n\t\tbodyOverflowY    : PropTypes.string.isRequired,\n\n\t\t// `aria-label` for the modal.\n\t\t// (is \"Popup\" by default)\n\t\tcontentLabel     : PropTypes.string.isRequired,\n\n\t\t// An optional close button (like a cross).\n\t\t// This is not actually a \"button\"\n\t\t// but instead \"button contents\",\n\t\t// i.e. `closeButton` will be wrapped with a `<button/>`.\n\t\tcloseButton      : PropTypes.node,\n\n\t\t// If set to `false` will prevent modal contents\n\t\t// from being unmounted when the modal is closed.\n\t\tunmount          : PropTypes.bool.isRequired,\n\n\t\t// Internal property\n\t\tcould_not_close_because_busy_animation_duration : PropTypes.number.isRequired,\n\n\t\t// CSS class for overlay (e.g. for fullscreen modal background color)\n\t\toverlayClassName : PropTypes.string,\n\n\t\t// CSS class\n\t\tclassName        : PropTypes.string,\n\n\t\t// CSS style object\n\t\tstyle            : PropTypes.object\n\t}\n\n\tstatic defaultProps =\n\t{\n\t\tisOpen : false,\n\n\t\tbodyOverflowX : 'auto',\n\t\t// Prevents document width from jumping due to the\n\t\t// vertical scrollbar appearance/disappearance\n\t\tbodyOverflowY : 'scroll',\n\n\t\t// when changing this also change\n\t\t// your .ReactModal__Overlay and .ReactModal__Content\n\t\t// css transition times accordingly\n\t\tcloseTimeout : 150, // ms\n\n\t\tcontentLabel : 'Popup',\n\n\t\t// Modal contents are unmounted when the modal is closed by default\n\t\tunmount : true,\n\n\t\t// When changing this also change\n\t\t// `.rrui__modal--could-not-close-because-busy`\n\t\t// css transition time accordingly\n\t\tcould_not_close_because_busy_animation_duration: 600 // ms\n\t}\n\n\tstatic childContextTypes =\n\t{\n\t\trrui__modal : PropTypes.object\n\t}\n\n\tgetChildContext()\n\t{\n\t\tconst\n\t\t{\n\t\t\tcloseLabel\n\t\t}\n\t\t= this.props\n\n\t\tconst context =\n\t\t{\n\t\t\trrui__modal:\n\t\t\t{\n\t\t\t\tcloseLabel,\n\t\t\t\tclose_if_not_busy : this.close_if_not_busy,\n\t\t\t\tregister_form     : this.register_form,\n\t\t\t\tunregister_form   : this.unregister_form\n\t\t\t}\n\t\t}\n\n\t\treturn context\n\t}\n\n\tcomponentWillReceiveProps(nextProps)\n\t{\n\t\tconst { unmount, isOpen } = this.props\n\n\t\tif (!unmount)\n\t\t{\n\t\t\tif (!isOpen && nextProps.isOpen)\n\t\t\t{\n\t\t\t\tthis.on_after_open()\n\t\t\t}\n\t\t\telse if (isOpen && !nextProps.isOpen)\n\t\t\t{\n\t\t\t\tthis.on_after_close()\n\t\t\t\tthis.reset_content_scroll()\n\t\t\t}\n\t\t}\n\t}\n\n\t// A modal itself umounts only when the user leaves a page,\n\t// so in a \"Single Page Application\", for example,\n\t// if this was a regular popup and a user could still navigate\n\t// away via a hyperlink then this code becomes neccessary.\n\tcomponentWillUnmount()\n\t{\n\t\tconst { isOpen } = this.props\n\n\t\tthis.unmounted = true\n\n\t\t// If the modal is still open\n\t\t// while a user navigates away\n\t\t// then \"close\" it properly\n\t\t// (restore the document scrollbars, etc).\n\t\tif (isOpen)\n\t\t{\n\t\t\tthis.on_after_close()\n\t\t}\n\n\t\tif (this.could_not_close_because_busy_animation_timeout)\n\t\t{\n\t\t\tclearTimeout(this.could_not_close_because_busy_animation_timeout)\n\t\t\tthis.could_not_close_because_busy_animation_timeout = undefined\n\t\t}\n\t}\n\n\trender()\n\t{\n\t\tconst\n\t\t{\n\t\t\tbusy,\n\t\t\tfullscreen,\n\t\t\tisOpen,\n\t\t\tcloseTimeout,\n\t\t\tcontentLabel,\n\t\t\ttitle,\n\t\t\tcloseLabel,\n\t\t\tcloseButton,\n\t\t\tactions,\n\t\t\tunmount,\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\toverlayClassName,\n\t\t\tchildren\n\t\t}\n\t\t= this.props\n\n\t\tconst\n\t\t{\n\t\t\tcould_not_close_because_busy,\n\t\t\tform\n\t\t}\n\t\t= this.state\n\n\t\tconst markup =\n\t\t(\n\t\t\t<ReactModal\n\t\t\t\tisOpen={ unmount ? isOpen : true }\n\t\t\t\tonAfterOpen={ unmount ? this.on_after_open : undefined }\n\t\t\t\tonRequestClose={ this.on_request_close }\n\t\t\t\tcloseTimeoutMS={ closeTimeout }\n\t\t\t\tcontentLabel={ contentLabel }\n\t\t\t\tstyle={ react_modal_style }\n\t\t\t\toverlayClassName={ classNames('rrui__modal__overlay',\n\t\t\t\t{\n\t\t\t\t\t'rrui__modal__overlay--busy'       : busy,\n\t\t\t\t\t'rrui__modal__overlay--fullscreen' : fullscreen,\n\t\t\t\t\t'rrui__modal__overlay--hidden'     : !unmount && !isOpen\n\t\t\t\t},\n\t\t\t\toverlayClassName) }\n\t\t\t\tclassName={ classNames('rrui__modal__container',\n\t\t\t\t{\n\t\t\t\t\t'rrui__modal__container--fullscreen' : fullscreen\n\t\t\t\t}) }>\n\n\t\t\t\t{/* Top margin, grows less than bottom margin */}\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classNames('rrui__modal__vertical-margin', 'rrui__modal__vertical-margin--top',\n\t\t\t\t\t{\n\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t'rrui__modal__vertical-margin--fullscreen' : fullscreen\n\t\t\t\t\t}) }\n\t\t\t\t\tonClick={ this.on_request_close }/>\n\n\t\t\t\t{/* Modal window content */}\n\n\t\t\t\t<Modal_content\n\t\t\t\t\tref={ ref => this.content = ref }\n\t\t\t\t\tcloseLabel={ closeLabel }\n\t\t\t\t\tcloseButton={ closeButton }\n\t\t\t\t\tclose={ this.close_if_not_busy }\n\t\t\t\t\tstyle={ style }\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\tfullscreen={ fullscreen }\n\t\t\t\t\tcould_not_close_because_busy={ could_not_close_because_busy }\n\t\t\t\t\tform={ form }\n\t\t\t\t\tbusy={ busy }\n\t\t\t\t\treset={ this.on_after_close }>\n\t\t\t\t\t{ children }\n\t\t\t\t</Modal_content>\n\n\t\t\t\t{/* Bottom margin, grows more than top margin */}\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classNames('rrui__modal__vertical-margin', 'rrui__modal__vertical-margin--bottom',\n\t\t\t\t\t{\n\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t'rrui__modal__vertical-margin--fullscreen' : fullscreen\n\t\t\t\t\t}) }\n\t\t\t\t\tonClick={ this.on_request_close }/>\n\t\t\t</ReactModal>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\tregister_form = () =>\n\t{\n\t\t// Using a counter instead of a boolean here\n\t\t// because a new form may be mounted before the old one is unmounted.\n\t\t// (React reconciliation algorythm implementation details)\n\t\tthis.setState(({ form }) => ({ form: form + 1 }))\n\t}\n\n\tunregister_form = () =>\n\t{\n\t\tif (this.unmounted)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\t// Using a counter instead of a boolean here\n\t\t// because a new form may be mounted before the old one is unmounted.\n\t\t// (React reconciliation algorythm implementation details)\n\t\tthis.setState(({ form }) => ({ form: form - 1 }))\n\t}\n\n\t// Play \"cannot close\" animation on the modal\n\tindicate_cannot_close()\n\t{\n\t\tconst { could_not_close_because_busy_animation_duration } = this.props\n\t\tconst { could_not_close_because_busy } = this.state\n\n\t\tif (!could_not_close_because_busy)\n\t\t{\n\t\t\tthis.could_not_close_because_busy_animation_timeout = setTimeout(() =>\n\t\t\t{\n\t\t\t\tthis.could_not_close_because_busy_animation_timeout = undefined\n\t\t\t\tthis.setState({ could_not_close_because_busy: false })\n\t\t\t},\n\t\t\t// Give it a bit of extra time to finish the CSS animation\n\t\t\tcould_not_close_because_busy_animation_duration * 1.1)\n\n\t\t\tthis.setState({ could_not_close_because_busy: true })\n\t\t}\n\t}\n\n\ton_request_close = (event) =>\n\t{\n\t\tconst { closeLabel } = this.props\n\t\tconst { form } = this.state\n\n\t\t// If the modal has an explicit \"Cancel\" button,\n\t\t// then allow closing it by hitting \"Escape\" key,\n\t\t// but don't close it on a click outside.\n\t\t// (because a user wouldn't want to loose form data due to a misclick)\n\t\tif (closeLabel && form && event && event.type !== 'keydown')\n\t\t{\n\t\t\tthis.indicate_cannot_close()\n\t\t\treturn ReactDOM.findDOMNode(this.content).parentNode.focus()\n\t\t}\n\n\t\tthis.close_if_not_busy()\n\t}\n\n\tclose_if_not_busy = () =>\n\t{\n\t\tconst { busy, close, closeTimeout } = this.props\n\n\t\t// For weird messed development mode cases\n\t\tif (this.unmounted)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\t// Don't close the modal if it's busy\n\t\tif (busy)\n\t\t{\n\t\t\treturn this.indicate_cannot_close()\n\t\t}\n\n\t\t// Abruptly end \"couldn't close\" animation to make room for closing animation\n\t\tthis.setState({ could_not_close_because_busy: false })\n\n\t\t// Close the modal\n\t\tif (close)\n\t\t{\n\t\t\tclose()\n\t\t}\n\t}\n\n\t// If the user scrolled on a previously shown react-modal,\n\t// then reset that previously scrolled position.\n\treset_content_scroll()\n\t{\n\t\tdocument.querySelector('.ReactModal__Overlay').scrollTop = 0\n\t}\n\n\t// Hides the main (body) scrollbar upon showing a modal\n\t// and also adjusts the width of all \"full-width\" elements\n\t// so that they don't expand no that the scrollbar is absent.\n\t//\n\t// This doesn't account for window resizes\n\t// but since my body is always `overflow: visible` (a good practice)\n\t// there's no difference and it should work in any scenario.\n\t//\n\tadjust_scrollbar_after_open()\n\t{\n\t\t// A dummy `<div/>` to measure\n\t\t// the difference in width\n\t\t// needed for the \"full-width\" elements\n\t\t// after the main (body) scrollbar is deliberately hidden.\n\t\tconst div = document.createElement('div')\n\t\tdiv.style.position = 'fixed'\n\t\tdiv.style.left     = 0\n\t\tdiv.style.right    = 0\n\t\tdocument.body.appendChild(div)\n\n\t\t// Calculate the width of the dummy `<div/>`\n\t\t// before the main (body) scrollbar is deliberately hidden.\n\t\tconst width_before = div.clientWidth\n\n\t\tdocument.body.removeChild(div)\n\n\t\t// Hide the main (body) scrollbar\n\t\t// so that when a user scrolls in an open modal\n\t\t// this `scroll` event doesn't go through\n\t\t// and scroll the main page.\n\t\tdocument.body.style.overflow = 'hidden'\n\n\t\t// All \"full-width\" elements will need their\n\t\t// width to be adjusted by this amount\n\t\t// because of the now-hidden main (body) scrollbar\n\n\t\t// Calculate the width of the dummy `<div/>`\n\t\t// after the main (body) scrollbar is deliberately hidden.\n\t\tconst width_adjustment = div.clientWidth - width_before\n\n\t\t// \"full-width\" elements include `document.body`\n\t\t// and all `position: fixed` elements\n\t\t// which should be marked with this special CSS class.\n\t\t//\n\t\t// Make sure to add `.rrui__fixed-full-width` CSS class\n\t\t// to all full-width `position: fixed` elements.\n\t\t// Such elements must not be `width: 100%`\n\t\t// but rather `width: auto` or `left: 0; right: 0;`.\n\t\t//\n\t\t// Adjusts the width of all \"full-width\" elements\n\t\t// so that they don't expand by the width of the (now absent) scrollbar\n\t\t//\n\t\tfor (const element of get_full_width_elements())\n\t\t{\n\t\t\telement.style.marginRight = width_adjustment + 'px'\n\t\t}\n\n\t\tthis.reset_content_scroll()\n\t}\n\n\ton_after_open = () =>\n\t{\n\t\tconst { afterOpen } = this.props\n\n\t\tthis.adjust_scrollbar_after_open()\n\n\t\tif (afterOpen)\n\t\t{\n\t\t\tafterOpen()\n\t\t}\n\t}\n\n\t// Restores original `document` scrollbar.\n\tadjust_scrollbar_after_close()\n\t{\n\t\tconst\n\t\t{\n\t\t\tbodyOverflowX,\n\t\t\tbodyOverflowY\n\t\t}\n\t\t= this.props\n\n\t\t// All \"full-width\" elements will need their\n\t\t// width to be restored back to the original value\n\t\t// now that the main (body) scrollbar is being restored.\n\n\t\t// \"full-width\" elements include `document.body`\n\t\t// and all `position: fixed` elements\n\t\t// which should be marked with this special CSS class.\n\t\t// (`Array.from` is transpiled by Babel)\n\t\t//\n\t\t// Make sure to add `.rrui__fixed-full-width` CSS class\n\t\t// to all full-width `position: fixed` elements.\n\t\t// Such elements must not be `width: 100%`\n\t\t// but rather `width: auto` or `left: 0; right: 0;`.\n\t\t//\n\t\t// Adjusts the width of all \"full-width\" elements back to their original value\n\t\t// now that the main (body) scrollbar is being restored.\n\t\t//\n\t\tfor (const element of get_full_width_elements())\n\t\t{\n\t\t\telement.style.marginRight = 0\n\t\t}\n\n\t\t// Restore the main (body) scrollbar.\n\t\tdocument.body.style.overflowX = bodyOverflowX\n\t\tdocument.body.style.overflowY = bodyOverflowY\n\t}\n\n\t// Restores original `document` scrollbar\n\t// and resets the modal content (e.g. a form)\n\ton_after_close = () =>\n\t{\n\t\tconst\n\t\t{\n\t\t\tafterClose,\n\t\t\treset\n\t\t}\n\t\t= this.props\n\n\t\tif (reset)\n\t\t{\n\t\t\treset()\n\t\t}\n\n\t\tif (afterClose)\n\t\t{\n\t\t\tafterClose()\n\t\t}\n\n\t\tthis.adjust_scrollbar_after_close()\n\t}\n}\n\nclass Modal_content extends PureComponent\n{\n\tcomponentWillUnmount()\n\t{\n\t\tconst { reset } = this.props\n\n\t\tif (reset)\n\t\t{\n\t\t\treset()\n\t\t}\n\t}\n\n\trender()\n\t{\n\t\tconst\n\t\t{\n\t\t\tcloseLabel,\n\t\t\tclose,\n\t\t\tfullscreen,\n\t\t\tchildren,\n\t\t\tclassName,\n\t\t\tstyle,\n\t\t\tform,\n\t\t\tcould_not_close_because_busy\n\t\t}\n\t\t= this.props\n\n\t\tconst markup =\n\t\t(\n\t\t\t<div\n\t\t\t\tclassName={ classNames('rrui__modal__content',\n\t\t\t\t{\n\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t'rrui__modal__content--fullscreen' : fullscreen,\n\n\t\t\t\t\t// Strictly speaking it's not `.rrui__modal` but this CSS class name will do\n\t\t\t\t\t'rrui__modal--could-not-close-because-busy': could_not_close_because_busy\n\t\t\t\t},\n\t\t\t\tclassName) }\n\t\t\t\tstyle={ style }>\n\n\t\t\t\t<div className=\"rrui__modal__content-body\">\n\n\t\t\t\t\t{ this.render_close_button() }\n\n\t\t\t\t\t{ children }\n\n\t\t\t\t\t{ closeLabel && !form &&\n\t\t\t\t\t\t<div className=\"rrui__form__actions\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={ classNames('rrui__modal__close', 'rrui__modal__close--bottom') }\n\t\t\t\t\t\t\t\taction={ close }>\n\t\t\t\t\t\t\t\t{ closeLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_close_button()\n\t{\n\t\tconst\n\t\t{\n\t\t\tcloseLabel,\n\t\t\tcloseButton,\n\t\t\tclose,\n\t\t\tbusy\n\t\t}\n\t\t= this.props\n\n\t\tif (!closeButton)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tonClick={ close }\n\t\t\t\taria-label={ closeLabel }\n\t\t\t\tclassName={ classNames('rrui__modal__close', 'rrui__modal__close--top',\n\t\t\t\t{\n\t\t\t\t\t'rrui__modal__close--busy' : busy\n\t\t\t\t}) }>\n\t\t\t\t{ closeButton }\n\t\t\t</button>\n\t\t)\n\t}\n}\n\nconst react_modal_style =\n{\n\toverlay:\n\t{\n\t\tposition : 'fixed',\n\t\tleft     : 0,\n\t\ttop      : 0,\n\t\tright    : 0,\n\t\tbottom   : 0,\n\t\t// Will show a scrollbar in case of modal content overflowing viewport height\n\t\toverflow : 'auto'\n\t}\n}\n\n// \"full-width\" elements include `document.body`\n// and all `position: fixed` elements\n// which should be marked with this special CSS class.\n//\n// Make sure to add `.rrui__fixed-full-width` CSS class\n// to all full-width `position: fixed` elements.\n// Such elements must not be `width: 100%`\n// but rather `width: auto` or `left: 0; right: 0;`.\n//\nfunction get_full_width_elements()\n{\n\t// (`Array.from` is transpiled by Babel)\n\tconst full_width_elements = Array.from(document.querySelectorAll('.rrui__fixed-full-width'))\n\tfull_width_elements.push(document.body)\n\treturn full_width_elements\n}"]}