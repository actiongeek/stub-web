import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import PropTypes from 'prop-types';

var Page_and_menu = function (_Component) {
	_inherits(Page_and_menu, _Component);

	// state =
	// {
	// 	show_menu  : false,
	// 	menu_width : 0,
	// 	page_moved_aside : false
	// }

	function Page_and_menu() {
		_classCallCheck(this, Page_and_menu);

		var _this = _possibleConstructorReturn(this, (Page_and_menu.__proto__ || _Object$getPrototypeOf(Page_and_menu)).call(this));

		_this.hide_menu_on_mouse_down = _this.hide_menu_on_mouse_down.bind(_this);
		// this.toggle_menu        = this.toggle_menu.bind(this)
		// this.update_menu_width  = this.update_menu_width.bind(this)
		return _this;
	}

	_createClass(Page_and_menu, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    children = _props.children,
			    rest = _objectWithoutProperties(_props, ['children']);

			var markup = React.createElement(
				'div',
				_extends({
					onTouchStart: this.hide_menu_on_mouse_down,
					onMouseDown: this.hide_menu_on_mouse_down
				}, rest),
				children
			);

			return markup;
		}
	}, {
		key: 'hide_menu_on_mouse_down',
		value: function hide_menu_on_mouse_down(event) {
			if (!this.menu || !this.menu_button) {
				return;
			}

			// Hide the menu only if clicked outside
			if (this.menu.element().contains(event.target) || this.menu_button.element().contains(event.target)) {
				return;
			}

			this.menu.hide();
		}

		// toggle_menu()
		// {
		// 	if (!this.state.show_menu)
		// 	{
		// 		return this.setState({ show_menu: !this.state.show_menu, page_moved_aside: !this.state.page_moved_aside })
		// 	}
		//
		// 	this.setState({ show_menu: !this.state.show_menu }, () =>
		// 	{
		// 		// Requires a corresponding `clearTimeout()`` in `componentWillUnmount()``
		// 		setTimeout(() =>
		// 		{
		// 			this.setState({ page_moved_aside: this.state.show_menu })
		// 		},
		// 		menu_transition_duration)
		// 	})
		// }

		// update_menu_width(width)
		// {
		// 	this.setState({ menu_width: width })
		// }

	}, {
		key: 'getChildContext',
		value: function getChildContext() {
			var _this2 = this;

			var context = {
				react_responsive_ui_menu: {
					toggle: function toggle() {
						return _this2.menu.toggle();
					},

					register: function register(menu) {
						if (_this2.menu) {
							throw new Error('There already is a menu registered for this page');
						}

						_this2.menu = menu;

						return function () {
							return _this2.menu = undefined;
						};
					},

					register_menu_button: function register_menu_button(menu_button) {
						if (_this2.menu_button) {
							throw new Error('There already is a menu button registered for this page');
						}

						_this2.menu_button = menu_button;

						return function () {
							return _this2.menu_button = undefined;
						};
					}
				}
			};

			return context;
		}
	}]);

	return Page_and_menu;
}(Component);

Page_and_menu.childContextTypes = {
	react_responsive_ui_menu: PropTypes.shape({
		toggle: PropTypes.func.isRequired,
		register: PropTypes.func.isRequired
	}).isRequired
};
export default Page_and_menu;
//# sourceMappingURL=PageAndMenu.js.map