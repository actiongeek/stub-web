{"version":3,"sources":["../source/DragAndDrop.js"],"names":["HTML5Backend","NativeTypes","DragDropContext","DragLayer","DropTarget","CanDrop","type","drop","Error","get_react_dnd_type","props","monitor","component","get_dropped_object","connect","dropTarget","draggedOver","isOver","canDrop","DragAndDrop","context","layer","isDragging","File","Files","FILE","dropped","getItem","files"],"mappings":";AAAA,OAAOA,YAAP,IAAuBC,WAAvB,QAA0C,yBAA1C;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,WAAvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EACP;AACC,KAAI,CAACD,IAAL,EACA;AACC,QAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACA;;AAED,QAAOJ,WAAWK,mBAAmBH,IAAnB,CAAX,EACP;AACCC,QAAM,cAACG,KAAD,EAAQC,OAAR,EAAiBC,SAAjB;AAAA,UAA+BL,MAAKG,KAAL,EAAYG,mBAAmBF,OAAnB,EAA4BL,IAA5B,CAAZ,EAA+CM,SAA/C,CAA/B;AAAA;;AADP,EADO,EAgBP,UAACE,OAAD,EAAUH,OAAV;AAAA,SACC;AACAI,eAAcD,QAAQC,UAAR,EADd;AAEAC,gBAAcL,QAAQM,MAAR,EAFd;AAGAC,YAAcP,QAAQO,OAAR;AAHd,GADD;AAAA,EAhBO,CAAP;AAsBA;;AAED;AACA,OAAO,SAASC,WAAT,GACP;AACC,KAAMC,UAAUlB,gBAAgBF,YAAhB,CAAhB;;AAEA,KAAMqB,QAAQlB,UAAU,UAACQ,OAAD;AAAA,SACvB;AACAW,eAAaX,QAAQW,UAAR;AADb,GADuB;AAAA,EAAV,CAAd;;AAQA,QAAO;AAAA,SAAaF,QAAQC,MAAMT,SAAN,CAAR,CAAb;AAAA,EAAP;AACA;;AAED;AACA,OAAO,IAAMW,OAAO,MAAb;;AAEP;AACA,OAAO,IAAMC,QAAQ,OAAd;;AAEP;AACA;AACA,SAASf,kBAAT,CAA4BH,IAA5B,EACA;AACC,SAAQA,IAAR;AAEC,OAAKiB,IAAL;AACA,OAAKC,KAAL;AACC,UAAOvB,YAAYwB,IAAnB;AACD;AACC,UAAOnB,IAAP;AANF;AAQA;;AAED;AACA,SAASO,kBAAT,CAA4BF,OAA5B,EAAqCL,IAArC,EACA;AACC,KAAMoB,UAAUf,QAAQgB,OAAR,EAAhB;;AAEA,SAAQrB,IAAR;AAEC,OAAKiB,IAAL;AACC,UAAOG,QAAQE,KAAR,CAAc,CAAd,CAAP;AACD,OAAKJ,KAAL;AACC,UAAOE,QAAQE,KAAf;AACD;AACC,UAAOF,OAAP;AAPF;AASA","file":"DragAndDrop.js","sourcesContent":["import HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend'\nimport { DragDropContext, DragLayer, DropTarget } from 'react-dnd'\n\n// Usage:\n//\n// import { DragAndDrop, CanDrop, FILE, FILES } from 'react-responsive-ui'\n//\n// @DragAndDrop()\n// class Application extends Component {\n// \trender() {\n// \t\tconst { isDragging, children } = this.props\n// \t\treturn <div>{ children }</div>\n// \t}\n// }\n//\n// @CanDrop(FILE, (props, dropped, component) => alert('Uploading file'))\n// class FileDropArea extends Component {\n// \trender() {\n// \t\tconst { dropTarget, draggedOver, canDrop } = this.props\n// \t\treturn dropTarget(<div>Drop files here</div>)\n// \t}\n// }\n\n// Decorate the droppable area component with this decorator\nexport function CanDrop(type, drop)\n{\n\tif (!type)\n\t{\n\t\tthrow new Error('Provide a `type` for `@CanDrop()` decorator')\n\t}\n\n\treturn DropTarget(get_react_dnd_type(type),\n\t{\n\t\tdrop: (props, monitor, component) => drop(props, get_dropped_object(monitor, type), component),\n\n\t\t// canDrop(props, monitor)\n\t\t// {\n\t\t// \tswitch (type)\n\t\t// \t{\n\t\t// \t\t// // Browser doesn't allow reading \"files\" until the drop event.\n\t\t// \t\t// case File:\n\t\t// \t\t// \treturn monitor.getItem().files.length === 1\n\t\t// \t\tdefault:\n\t\t// \t\t\treturn true\n\t\t// \t}\n\t\t// }\n\t},\n\t(connect, monitor) =>\n\t({\n\t\tdropTarget  : connect.dropTarget(),\n\t\tdraggedOver : monitor.isOver(),\n\t\tcanDrop     : monitor.canDrop()\n\t}))\n}\n\n// Decorate the root React application component with this decorator\nexport function DragAndDrop()\n{\n\tconst context = DragDropContext(HTML5Backend)\n\n\tconst layer = DragLayer((monitor) =>\n\t({\n\t\tisDragging : monitor.isDragging(),\n\t\t// item           : monitor.getItem(),\n\t\t// item_type      : monitor.getItemType(),\n\t\t// current_offset : monitor.getSourceClientOffset()\n\t}))\n\n\treturn component => context(layer(component))\n}\n\n// Native file drag'n'drop (single file)\nexport const File = 'File'\n\n// Native file drag'n'drop (multiple files)\nexport const Files = 'Files'\n\n// Gets the corresponding `react-dnd` type\n// for a given droppable object type\nfunction get_react_dnd_type(type)\n{\n\tswitch (type)\n\t{\n\t\tcase File:\n\t\tcase Files:\n\t\t\treturn NativeTypes.FILE\n\t\tdefault:\n\t\t\treturn type\n\t}\n}\n\n// Gets the dropped object from `monitor`\nfunction get_dropped_object(monitor, type)\n{\n\tconst dropped = monitor.getItem()\n\n\tswitch (type)\n\t{\n\t\tcase File:\n\t\t\treturn dropped.files[0]\n\t\tcase Files:\n\t\t\treturn dropped.files\n\t\tdefault:\n\t\t\treturn dropped\n\t}\n}"]}