import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

var File_upload = function (_PureComponent) {
	_inherits(File_upload, _PureComponent);

	function File_upload() {
		_classCallCheck(this, File_upload);

		var _this = _possibleConstructorReturn(this, (File_upload.__proto__ || _Object$getPrototypeOf(File_upload)).call(this));

		_this.on_file_selected = _this.on_file_selected.bind(_this);
		_this.on_click = _this.on_click.bind(_this);
		_this.on_input_click = _this.on_input_click.bind(_this);
		_this.on_input_change = _this.on_input_change.bind(_this);
		return _this;
	}

	_createClass(File_upload, [{
		key: 'on_input_click',
		value: function on_input_click(event) {
			event.stopPropagation();
		}
	}, {
		key: 'on_input_change',
		value: function on_input_change(event) {
			this.on_file_selected(event);
		}
	}, {
		key: 'on_file_selected',
		value: function on_file_selected(event) {
			var _props = this.props,
			    action = _props.action,
			    multiple = _props.multiple;


			var data = event.target.files;

			if (!multiple) {
				data = data[0];
			}

			action(data);

			// reset the selected file
			// so that onChange would trigger again
			// even with the same file
			event.target.value = null;
		}
	}, {
		key: 'on_click',
		value: function on_click(event) {
			var _props2 = this.props,
			    disabled = _props2.disabled,
			    onClick = _props2.onClick;


			if (disabled) {
				return event.preventDefault();
			}

			if (onClick) {
				onClick();
			}

			this.file_upload.click();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props3 = this.props,
			    disabled = _props3.disabled,
			    style = _props3.style,
			    className = _props3.className,
			    children = _props3.children;


			var markup = React.createElement(
				'div',
				{
					style: style,
					className: classNames('rrui__file-upload', className, {
						'rrui__file-upload--disabled': disabled
					}),
					onClick: this.on_click },
				React.createElement('input', {
					type: 'file',
					ref: function ref(_ref) {
						return _this2.file_upload = _ref;
					},
					key: 'file_input',
					style: input_style,
					onClick: this.on_click,
					onChange: this.on_input_change }),
				children
			);

			return markup;
		}
	}]);

	return File_upload;
}(PureComponent);

File_upload.propTypes = {
	// On file chosen handler
	action: PropTypes.func.isRequired,

	// Allows choosing multiple files if `true`
	multiple: PropTypes.bool,

	// Disables the file input
	disabled: PropTypes.bool,

	// `onClick` handler
	onClick: PropTypes.func,

	// The clickable area, like "Click here to choose a file"
	children: PropTypes.node,

	// CSS class
	className: PropTypes.string,

	// CSS style object
	style: PropTypes.object
};
export default File_upload;


var input_style = {
	display: 'none'
};
//# sourceMappingURL=FileUpload.js.map