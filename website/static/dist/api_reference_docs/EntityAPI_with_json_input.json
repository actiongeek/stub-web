{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "Entity API",
    "description" : "An Entity can be a service tech, driver, crew member or food delivery person or any trackable asset. There is no limit on number of Entities one can create in Arrivy. Once you create an entity you will be able to `report & fetch` its location and assign tasks. Task repesents an order or a delivery assigned to an entity."
  },
  "host" : "www.arrivy.com",
  "basePath" : "/api",
  "schemes" : [ "https" ],
  "paths" : {
    "/entities/new" : {
      "post" : {
        "tags" : [ "Entity APIs" ],
        "summary" : "Adds a new entity.",
        "description" : "Adds a new entity to the company. Required fields for a new entity are `name`, `type` and `permission`.The response will return unique entity id which can be used for future API calls. We highly recommend that you store it somewhere. Optional fields are `email`, `phone`, `details`, `permission`, `extra_fields` (JSON object of key value pairs), `image_id` , `image_path` and `external_id` (typically, an id from the client system). Permission can be `ADMIN`, `SCHEDULER`, `FIELDCREW` or `LIMITEDACCESS`.",
        "operationId" : "create_entity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "description" : "An entity has following attributes. <br> **`name:*required`** (_string_) Name of the Entity. <br /> **`type:*required`** (_string_) Type of the Entity. Typically this is the role in the company e.g. Crew Lead, etc. <br /> **`permission:*required`** (_string_) Permission level of the Entity. It has to be one of the values, i.e. `ADMIN`, `SCHEDULER`, `FIELDCREW` and `LIMITEDACCESS`. <br /> `email:` (_string_) Email of the Entity. It is optional. If provided and the invite_to_join is not set to False then Arrivy will send an invite to this address to join arrivy platform. Generally, it’s done when the team members need to use Arrivy mobile apps or web experience. <br /> `invite_to_join:` (_boolean_) True/False which indicates that whether Arrivy needs to send invitation email to this entity to register an account on Arrivy. By default it is considered as True. <br /> `create_account:` (_boolean_) True means that Arrivy should automatically create a login account for this entity with the provided email and the password (sent as a separate field to this call). By default it is assumed False. <br /> `password:` (_string_) Password for the account to be created. Again, this is only used when invite_to_join is False and create_account is True. <br /> `phone:` (_string_) Phone Number of eht Entity. <br /> `details:` (_string_) Details of the Entity. This is used to write a short introduction of the Entity that will be visible on the customer’s view of the task. <br /> `extra_fields:` (_object_) Custom fields provided as key value pair as JSON object. This is very useful as it can help store essentially any data with the entity. <br /> `image_id:` (_integer_) ID of Image. <br /> `image_path:` (_string_) Profile image path for the Entity. This is used in customer’s view of the job. <br /> `group_id:` (_integer_) ID of the group of this entity. <br /> `external_id:` (_string_) Typically, an id from the client system. <br /> `ref:` (_string_) Source/Reference of the user account being created along with the entity. <br /> `company_id:` (_integer_) Optional param to create entity in a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "name" : "payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "example" : "Eddit Weinberger"
              },
              "type" : {
                "type" : "string",
                "example" : "Crew Lead"
              },
              "email" : {
                "type" : "string",
                "example" : "eddit@motivatedmovers.com"
              },
              "phone" : {
                "type" : "string",
                "example" : "+14256064556"
              },
              "invite_to_join" : {
                "type" : "boolean",
                "example" : true
              },
              "details" : {
                "type" : "string",
                "example" : "The new crew lead."
              },
              "image_id" : {
                "type" : "integer",
                "example" : 5194384987389952
              },
              "image_path" : {
                "type" : "string",
                "example" : "https://example.com/user.png"
              },
              "extra_fields" : {
                "type" : "object",
                "properties" : {
                  "color" : {
                    "type" : "string",
                    "example" : "#ff0000"
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 5348024557502464
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "MISSING_VALUE"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Name is required"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    },
    "/entities/{entity_id}" : {
      "get" : {
        "tags" : [ "Entity APIs" ],
        "summary" : "Get a specific entity.",
        "description" : "Get all fields of a specific entity.",
        "operationId" : "get_entity",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entity_id",
          "in" : "path",
          "description" : "ID of the entity.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to get entity of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 5348024557502464
                },
                "type" : {
                  "type" : "string",
                  "example" : "Night-Shift Driver"
                },
                "owner" : {
                  "type" : "integer",
                  "example" : 5629499534213120
                },
                "name" : {
                  "type" : "string",
                  "example" : "John"
                },
                "email" : {
                  "type" : "string",
                  "example" : "john@doe.com"
                },
                "phone" : {
                  "type" : "string",
                  "example" : "+4356744 789"
                },
                "details" : {
                  "type" : "string",
                  "example" : "Joe loves his work"
                },
                "extra_fields" : {
                  "type" : "object",
                  "example" : null
                },
                "image_id" : {
                  "type" : "integer",
                  "example" : 12345
                },
                "group_id" : {
                  "type" : "integer",
                  "example" : null
                },
                "image_path" : {
                  "type" : "string",
                  "example" : "https://...../...."
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid entity_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Entity APIs" ],
        "summary" : "Update a specific entity.",
        "description" : "Just send the fields that you would like to change along with required fileds.",
        "operationId" : "update_entity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entity_id",
          "in" : "path",
          "description" : "ID of the entity.",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "description" : "An entity has following attributes. <br> **`name:*required`** (_string_) Name of the Entity. <br /> **`type:*required`** (_string_) Type of the Entity. Typically this is the role in the company e.g. Crew Lead, etc. <br /> `permission:` (_string_) Permission level of the Entity. It has to be one of the values, i.e. `ADMIN`, `SCHEDULER`, `FIELDCREW` and `LIMITEDACCESS`. <br /> `email:` (_string_) Email of the Entity. It is optional. If provided and the invite_to_join is not set to False then Arrivy will send an invite to this address to join arrivy platform. Generally, it’s done when the team members need to use Arrivy mobile apps or web experience. <br /> `invite_to_join:` (_boolean_) True/False which indicates that whether Arrivy needs to send invitation email to this entity to register an account on Arrivy. By default it is considered as True. <br /> `create_account:` (_boolean_) True means that Arrivy should automatically create a login account for this entity with the provided email and the password (sent as a separate field to this call). By default it is assumed False. <br /> `password:` (_string_) Password for the account to be created. Again, this is only used when invite_to_join is False and create_account is True. <br /> `phone:` (_string_) Phone Number of eht Entity. <br /> `details:` (_string_) Details of the Entity. This is used to write a short introduction of the Entity that will be visible on the customer’s view of the task. <br /> `extra_fields:` (_object_) Custom fields provided as key value pair as JSON object. This is very useful as it can help store essentially any data with the entity. <br /> `image_id:` (_integer_) ID of Image. <br /> `image_path:` (_string_) Profile image path for the Entity. This is used in customer’s view of the job. <br /> `group_id:` (_integer_) ID of the group of this entity. <br /> `external_id:` (_string_) Typically, an id from the client system. <br /> `ref:` (_string_) Source/Reference of the user account being created along with the entity. <br /> `company_id:` (_integer_) Optional param to create entity in a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "name" : "payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "example" : "Eddit Weinberger"
              },
              "type" : {
                "type" : "string",
                "example" : "Crew Lead"
              },
              "email" : {
                "type" : "string",
                "example" : "eddit@motivatedmovers.com"
              },
              "phone" : {
                "type" : "string",
                "example" : "+14256064556"
              },
              "invite_to_join" : {
                "type" : "boolean",
                "example" : true
              },
              "details" : {
                "type" : "string",
                "example" : "The new crew lead."
              },
              "image_id" : {
                "type" : "integer",
                "example" : 5194384987389952
              },
              "image_path" : {
                "type" : "string",
                "example" : "https://example.com/user.png"
              },
              "extra_fields" : {
                "type" : "object",
                "properties" : {
                  "color" : {
                    "type" : "string",
                    "example" : "#ff0000"
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 5348024557502464
                },
                "message" : {
                  "type" : "string",
                  "example" : "Updated."
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid entity_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Entity APIs" ],
        "summary" : "Delete a specific entity.",
        "description" : "Delete a specific entity.",
        "operationId" : "delete_entity",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entity_id",
          "in" : "path",
          "description" : "ID of the entity.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to delete entity of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "Deleted."
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid entity_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    },
    "/entities" : {
      "get" : {
        "tags" : [ "Entity APIs" ],
        "summary" : "List all Entities.",
        "description" : "List all entities in the company. You can provide some filter criterias to this API as query parameters. Response is an array of entities. Each entity will have always have a `name`, `id` and `type` while other fields are optional. Optional fields include `email`, `phone`, `details`, `extra_fields`, `group_id`, `image_path` etc.",
        "operationId" : "get_all_entities",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Optional page number to fetch.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "Optional entities per page.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Optional param to get entities using email. The entity matching this email will be returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "external_id",
          "in" : "query",
          "description" : "Optional param to get entities using external_id. The entity matching this external_id will be returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group_id",
          "in" : "query",
          "description" : "Optional param to get entities part of a specific group within the company. This is an internal arrivy group ID that should be known before-hand. Look at the complete reference on how to fetch all group_ids.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to view entity list of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer",
                    "example" : 5348024557502464
                  },
                  "type" : {
                    "type" : "string",
                    "example" : "Night-Shift Driver"
                  },
                  "owner" : {
                    "type" : "integer",
                    "example" : 5629499534213120
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "John"
                  },
                  "email" : {
                    "type" : "string",
                    "example" : "john@doe.com"
                  },
                  "phone" : {
                    "type" : "string",
                    "example" : "+4356744 789"
                  },
                  "details" : {
                    "type" : "string",
                    "example" : "Joe loves his work"
                  },
                  "extra_fields" : {
                    "type" : "object",
                    "example" : null
                  },
                  "group_id" : {
                    "type" : "integer",
                    "example" : null
                  },
                  "image_id" : {
                    "type" : "integer",
                    "example" : 12345
                  },
                  "image_path" : {
                    "type" : "string",
                    "example" : "https://...../...."
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid items_per_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "AuthKey" : {
      "type" : "apiKey",
      "name" : "X-Auth-Key",
      "in" : "header"
    },
    "AuthToken" : {
      "type" : "apiKey",
      "name" : "X-Auth-Token",
      "in" : "header"
    }
  },
  "definitions" : { }
}