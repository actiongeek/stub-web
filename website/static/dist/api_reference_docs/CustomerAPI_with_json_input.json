{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "Customer's API",
    "description" : "Each task typically has a customer. It's optional though. There is no limit on number of Customers one can create in Arrivy. All customer notifications are driven off of Task and TaskStatus APIs. Customer API is just to retrieve and add/update/delete the customer records so you can associate them appropriately with Tasks later on."
  },
  "host" : "www.arrivy.com",
  "basePath" : "/api",
  "schemes" : [ "https" ],
  "paths" : {
    "/customers/new" : {
      "post" : {
        "tags" : [ "Customer APIs" ],
        "summary" : "Add New Customer.",
        "description" : "Adds new customer.",
        "operationId" : "create_customer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "description" : "A customer has following attributes. <br /> **`first_name:*required`** (_string_) First name of the Customer. <br /> `last_name:` (_string_) Last name of the Customer. <br /> `company_name:` (_string_) Company name of the Customer. <br /> `notes:` (_string_) Notes related to the Customer. <br /> `email:` (_string_) Email of the Customer. <br /> `phone:` (_string_) Phone Number of the Customer. <br /> `mobile_number:` (_string_) Mobile Number of the Customer. <br /> `address_line_1:` (_string_) Customer Address Line 1. <br /> `address_line_2:` (_string_) Customer Address Line 2. <br /> `city:` (_string_) Customer's City. <br /> `state:` (_string_) Customer's State. <br /> `country:` (_string_) Customer's Country. <br /> `zipcode:` (_string_) Zipcdoe. <br /> `exact_location:` (_object_) Exact latitude and longitude of customer location. Expected format is a JSON object with these two keys `lat` and `lng`. <br /> `extra_fields:` (_object_) A key value pair object as JSON. This is very useful as it can help store essentially any custom data with the customer. <br /> `notifications:` (_object_) A key value pair as JSON. Possible key options are `sms`, `email`, `facebook` (in works). Indicate true or false to turn on or off each of these channels. <br /> `external_id:` (_string_) Typically, an id from the client system. <br /> `company_id:` (_integer_) Optional param to create customers of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "name" : "payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "first_name" : {
                "type" : "string",
                "example" : "Thomas"
              },
              "last_name" : {
                "type" : "string",
                "example" : "Weinberger"
              },
              "company_name" : {
                "type" : "string",
                "example" : "Suzan inc"
              },
              "email" : {
                "type" : "string",
                "example" : "email"
              },
              "phone" : {
                "type" : "string",
                "example" : "+1(340) 194-3046"
              },
              "mobile_number" : {
                "type" : "string",
                "example" : "+13401943046"
              },
              "notes" : {
                "type" : "string",
                "example" : "New customer in WA."
              },
              "extra_fields" : {
                "type" : "object",
                "properties" : {
                  "Distance_from_HQ" : {
                    "type" : "string",
                    "example" : "33.0"
                  }
                }
              },
              "notifications" : {
                "type" : "object",
                "properties" : {
                  "sms" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "email" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "address_line_1" : {
                "type" : "string",
                "example" : "3080 148th Ave SE"
              },
              "address_line_2" : {
                "type" : "string",
                "example" : ""
              },
              "city" : {
                "type" : "string",
                "example" : "Bellevue"
              },
              "state" : {
                "type" : "string",
                "example" : "WA"
              },
              "country" : {
                "type" : "string",
                "example" : "USA"
              },
              "zipcode" : {
                "type" : "string",
                "example" : "980074"
              },
              "exact_location" : {
                "type" : "object",
                "properties" : {
                  "lat" : {
                    "type" : "string",
                    "example" : "38.9072"
                  },
                  "lng" : {
                    "type" : "string",
                    "example" : "77.0369"
                  }
                }
              },
              "group_id" : {
                "type" : "integer",
                "example" : 4721144720523264
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 6100296669331456
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "EMAIL_INVALID"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Email validation failed"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    },
    "/customers/{customer_id}" : {
      "get" : {
        "tags" : [ "Customer APIs" ],
        "summary" : "Get a specific Customer.",
        "description" : "Get all entire payload of a specific customer as a JSON structure.",
        "operationId" : "get_customer",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "ID of the Customer.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to get customer of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 5348024557502464
                },
                "owner" : {
                  "type" : "integer",
                  "example" : 5629499534213120
                },
                "first_name" : {
                  "type" : "string",
                  "example" : "John"
                },
                "last_name" : {
                  "type" : "string",
                  "example" : "Doe"
                },
                "email" : {
                  "type" : "string",
                  "example" : "john@doe.com"
                },
                "mobile_number" : {
                  "type" : "string",
                  "example" : "+14255333945"
                },
                "extra_fields" : {
                  "type" : "object",
                  "example" : null
                },
                "city" : {
                  "type" : "integer",
                  "example" : "Seattle"
                },
                "state" : {
                  "type" : "string",
                  "example" : "Washington"
                },
                "country" : {
                  "type" : "string",
                  "example" : "USA"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid customer_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer APIs" ],
        "summary" : "Update a specific Customer.",
        "description" : "Update fields of a specific customer. Just send the fields that you would like to change.",
        "operationId" : "update_customer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "ID of the Customer.",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "description" : "A customer has following attributes. <br /> **`first_name:*required`** (_string_) First name of the Customer. <br /> `last_name:` (_string_) Last name of the Customer. <br /> `company_name:` (_string_) Company name of the Customer. <br /> `notes:` (_string_) Notes related to the Customer. <br /> `email:` (_string_) Email of the Customer. <br /> `phone:` (_string_) Phone Number of the Customer. <br /> `mobile_number:` (_string_) Mobile Number of the Customer. <br /> `address_line_1:` (_string_) Customer Address Line 1. <br /> `address_line_2:` (_string_) Customer Address Line 2. <br /> `city:` (_string_) Customer's City. <br /> `state:` (_string_) Customer's State. <br /> `country:` (_string_) Customer's Country. <br /> `zipcode:` (_string_) Zipcdoe. <br /> `exact_location:` (_object_) Exact latitude and longitude of customer location. Expected format is a JSON object with these two keys `lat` and `lng`. <br /> `extra_fields:` (_object_) A key value pair object as JSON. This is very useful as it can help store essentially any custom data with the customer. <br /> `notifications:` (_object_) A key value pair as JSON. Possible key options are `sms`, `email`, `facebook` (in works). Indicate true or false to turn on or off each of these channels. <br /> `external_id:` (_string_) Typically, an id from the client system. <br /> `company_id:` (_integer_) Optional param to create customers of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "name" : "payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "first_name" : {
                "type" : "string",
                "example" : "Thomas"
              },
              "last_name" : {
                "type" : "string",
                "example" : "Weinberger"
              },
              "company_name" : {
                "type" : "string",
                "example" : "Suzan inc"
              },
              "email" : {
                "type" : "string",
                "example" : "email"
              },
              "phone" : {
                "type" : "string",
                "example" : "+1(340) 194-3046"
              },
              "mobile_number" : {
                "type" : "string",
                "example" : "+13401943046"
              },
              "notes" : {
                "type" : "string",
                "example" : "New customer in WA."
              },
              "extra_fields" : {
                "type" : "object",
                "properties" : {
                  "Distance_from_HQ" : {
                    "type" : "string",
                    "example" : "33.0"
                  }
                }
              },
              "notifications" : {
                "type" : "object",
                "properties" : {
                  "sms" : {
                    "type" : "boolean",
                    "example" : true
                  },
                  "email" : {
                    "type" : "boolean",
                    "example" : false
                  }
                }
              },
              "address_line_1" : {
                "type" : "string",
                "example" : "3080 148th Ave SE"
              },
              "address_line_2" : {
                "type" : "string",
                "example" : ""
              },
              "city" : {
                "type" : "string",
                "example" : "Bellevue"
              },
              "state" : {
                "type" : "string",
                "example" : "WA"
              },
              "country" : {
                "type" : "string",
                "example" : "USA"
              },
              "zipcode" : {
                "type" : "string",
                "example" : "980074"
              },
              "exact_location" : {
                "type" : "object",
                "properties" : {
                  "lat" : {
                    "type" : "string",
                    "example" : "38.9072"
                  },
                  "lng" : {
                    "type" : "string",
                    "example" : "77.0369"
                  }
                }
              },
              "group_id" : {
                "type" : "integer",
                "example" : 4721144720523264
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "Updated."
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid customer_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer APIs" ],
        "summary" : "Delete a specific Customer.",
        "description" : "Delete a specific customer.",
        "operationId" : "delete_customer",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "ID of the Customer.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to delete customer of a sub-company.  Please reach out to us at dev.support@arrivy.com before you start using this field",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "Deleted."
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid customer_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    },
    "/customers" : {
      "get" : {
        "tags" : [ "Customer APIs" ],
        "summary" : "List All Customers.",
        "description" : "List all the customers. Possible URL params are explained below.",
        "operationId" : "get_all_customers",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Optional param to get customers back in pages. Default value is 1 if not supplied.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "Optional param to get customers back in batches. Default value is 500 if not supplied.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "external_id",
          "in" : "query",
          "description" : "Returns customer for a given external_id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to get customers of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "integer",
                    "example" : 5348024557502464
                  },
                  "owner" : {
                    "type" : "integer",
                    "example" : 5629499534213120
                  },
                  "first_name" : {
                    "type" : "string",
                    "example" : "John"
                  },
                  "last_name" : {
                    "type" : "string",
                    "example" : "Doe"
                  },
                  "email" : {
                    "type" : "string",
                    "example" : "john@doe.com"
                  },
                  "mobile_number" : {
                    "type" : "string",
                    "example" : "+14255333945"
                  },
                  "extra_fields" : {
                    "type" : "object",
                    "example" : null
                  },
                  "city" : {
                    "type" : "string",
                    "example" : "Seattle"
                  },
                  "state" : {
                    "type" : "string",
                    "example" : "Washington"
                  },
                  "country" : {
                    "type" : "string",
                    "example" : "USA"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid items_per_page"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "AuthKey" : {
      "type" : "apiKey",
      "name" : "X-Auth-Key",
      "in" : "header"
    },
    "AuthToken" : {
      "type" : "apiKey",
      "name" : "X-Auth-Token",
      "in" : "header"
    }
  },
  "definitions" : { }
}