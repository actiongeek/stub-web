{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "Task and Task Status API",
    "description" : "A `Task` is work that can be assigned to an Entity. This could be a service call, moving job, package delivery, food order or any other job. There is no limit on number of tasks that a user can create and assign to Entities. Once you create a Task you will be able to assign it to one or more Entities i.e. your tech, driver or crew members. Once a task is assigned to a crew member they can report status on the task e.g. `on their way to task`, `started`, `complete` etc. Also you can fetch the live estimate of the crew or driver arrival to the task location and task completion using our APIs. `Task Status` is a specific status entry related to a task. It can be reported by the office scheduler, internal system, assigned crew, customer (Thanks to our sms & email relay and our ability to attach note to a live task directly) and in some cases arrivy system. Arrivy supports variety of Task Status types and let users customize that statuses they want for each of their different job types."
  },
  "host" : "www.arrivy.com",
  "basePath" : "/api",
  "schemes" : [ "https" ],
  "paths" : {
    "/tasks/{task_id}/status/new" : {
      "post" : {
        "tags" : [ "Task Status APIs" ],
        "summary" : "Report New Task Status.",
        "description" : "Reports a new task status for your task. Note the task is identified using the task_id in the request url.",
        "operationId" : "create_task_status",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "task_id",
          "in" : "path",
          "description" : "ID of the task.",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "description" : "A task status has following attributes. <br /> **`type:*required`** (_string_) Type of status. Possible options are `NOTSTARTED`, `ENROUTE`, `STARTED`, `COMPLETE`, `EXCEPTION`, `CANCELLED`, `PREPARING`, `CONFIRMED`, `CUSTOM`, `RECOMMENDED`, `RESCHEDULED`, `CUSTOMER_EXCEPTION`, `ORDER` and `READYFORPICKUP`. <br /> **`time:*required`** (_string_) Time of status report. This needs to be ISO8601.Supported format is YYYY-MM-DDTHH:mm:ssZZ e.g. 2016-10-14T08:00:00+01:00 <br /> `reporter_name:` (_string_) Name of the reporter of the task status. Typically, it's the name of entity reporting the status. <br /> `reporter_id:` (_string_) Entity ID of the reporter. <br /> `extra_fields:` (_object_) A key value pair object. This is very useful as it can help store essentially any custom data with the task status. It could be `notes` (to add a note with task status), `visible_to_customer` (to make task status visible on customer's view of task), file paths etc. These keys-values pairs will also be sent via webhook notifications (can later be used for correlation). <br /> `source:` (_string_) String source of the task status e.g. it can be `web`, `email`, `sms` or `app`. App indicates arrivy mobile app. <br /> `current_destination:` (_object_) Used only for ENROUTE type status. It is a JSON object which contains address attributes which have same value as ONE of the addresses from task. As obvious by itâ€™s name, the attribute is used to indicate the current destination of the crew. <br /> `items:` (_array_) Used only for ORDER type status and indicates the status of items stored on the task. It is an array of items objects. The items provided here should exist in associtaed task for this status. We will try to match `id` field of each item. **NOTE:** Please add one more attribute in each item object and name it as `status`, and specify it's value as `DELIVERED` for the item which is delivered, `PICKED_UP` for the item which is picked up and `EXCEPTION` for the item which is rejected due to some reason. If an item has an `EXCEPTION` status then some exception reason is expected with it. Exception reason should be passed with attribute `exception` and it needs to be an object with attributes `code`, `message_tier_1`, `message_tier_2`, `notes` and `files`. <br /> `company_id:` (_integer_) Optional param to create task status for task of a sub-company.Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "name" : "payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "STARTED"
              },
              "time" : {
                "type" : "string",
                "example" : "2018-08-09T18:00:00+05:00"
              },
              "source" : {
                "type" : "string",
                "example" : "web"
              },
              "reporter_name" : {
                "type" : "string",
                "example" : "Eddie Weinberger"
              },
              "reporter_id" : {
                "type" : "integer",
                "example" : 65320145698732
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 5348024557502464
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid task_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    },
    "/tasks/{task_id}/status/{taskstatus_id}" : {
      "get" : {
        "tags" : [ "Task Status APIs" ],
        "summary" : "Get a specific task status.",
        "description" : "Returns the entire task status stucture as JSON given the task_id of the task and taskstatus_id of the task status.",
        "operationId" : "get_task_status",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "task_id",
          "in" : "path",
          "description" : "ID of the task.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "taskstatus_id",
          "in" : "path",
          "description" : "ID of the task status.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to get task status of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "example" : "ENROUTE"
                },
                "title" : {
                  "type" : "string",
                  "example" : "On Our Way"
                },
                "time" : {
                  "type" : "string",
                  "example" : "2016-10-14T08:00:00+01:00"
                },
                "reporter_name" : {
                  "type" : "string",
                  "example" : "John"
                },
                "reporter_id" : {
                  "type" : "string",
                  "example" : 5348024557502464
                },
                "source" : {
                  "type" : "string",
                  "example" : "web"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid taskstatus_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Task Status APIs" ],
        "summary" : "Update a specific task status.",
        "description" : "Update a task status given the task_id of the task and taskstatus_id of the task status.",
        "operationId" : "update_task_status",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "task_id",
          "in" : "path",
          "description" : "ID of the task.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "taskstatus_id",
          "in" : "path",
          "description" : "ID of the task status.",
          "required" : true,
          "type" : "integer"
        }, {
          "in" : "body",
          "description" : "A task status has following attributes. <br /> **`type:*required`** (_string_) Type of status. Possible options are `NOTSTARTED`, `ENROUTE`, `STARTED`, `COMPLETE`, `EXCEPTION`, `CANCELLED`, `PREPARING`, `CONFIRMED`, `CUSTOM`, `RECOMMENDED`, `RESCHEDULED`, `CUSTOMER_EXCEPTION`, `ORDER` and `READYFORPICKUP`. <br /> **`time:*required`** (_string_) Time of status report. This needs to be ISO8601.Supported format is YYYY-MM-DDTHH:mm:ssZZ e.g. 2016-10-14T08:00:00+01:00 <br /> `reporter_name:` (_string_) Name of the reporter of the task status. Typically, it's the name of entity reporting the status. <br /> `reporter_id:` (_string_) Entity ID of the reporter. <br /> `extra_fields:` (_object_) A key value pair object. This is very useful as it can help store essentially any custom data with the task status. It could be `notes` (to add a note with task status), `visible_to_customer` (to make task status visible on customer's view of task), file paths etc. These keys-values pairs will also be sent via webhook notifications (can later be used for correlation). <br /> `source:` (_string_) String source of the task status e.g. it can be `web`, `email`, `sms` or `app`. App indicates arrivy mobile app. <br /> `current_destination:` (_object_) Used only for ENROUTE type status. It is a JSON object which contains address attributes which have same value as ONE of the addresses from task. As obvious by itâ€™s name, the attribute is used to indicate the current destination of the crew. <br /> `items:` (_array_) Used only for ORDER type status and indicates the status of items stored on the task. It is an array of items objects. The items provided here should exist in associtaed task for this status. We will try to match `id` field of each item. **NOTE:** Please add one more attribute in each item object and name it as `status`, and specify it's value as `DELIVERED` for the item which is delivered, `PICKED_UP` for the item which is picked up and `EXCEPTION` for the item which is rejected due to some reason. If an item has an `EXCEPTION` status then some exception reason is expected with it. Exception reason should be passed with attribute `exception` and it needs to be an object with attributes `code`, `message_tier_1`, `message_tier_2`, `notes` and `files`. <br /> `company_id:` (_integer_) Optional param to create task status for task of a sub-company.Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "name" : "payload",
          "schema" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "STARTED"
              },
              "time" : {
                "type" : "string",
                "example" : "2018-08-09T18:00:00+05:00"
              },
              "source" : {
                "type" : "string",
                "example" : "app"
              },
              "reporter_name" : {
                "type" : "string",
                "example" : "Eddie Weinberger"
              },
              "reporter_id" : {
                "type" : "integer",
                "example" : 65320145698732
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "example" : 5348024557502464
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid task_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Task Status APIs" ],
        "summary" : "Delete a specific task status.",
        "description" : "Delete a task status given the task_id of the task and taskstatus_id of the task status.",
        "operationId" : "delete_task_status",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "task_id",
          "in" : "path",
          "description" : "ID of the task.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "taskstatus_id",
          "in" : "path",
          "description" : "ID of the task status.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to delete task status of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "Deleted."
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid taskstatus_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    },
    "/tasks/{task_id}/status" : {
      "get" : {
        "tags" : [ "Task Status APIs" ],
        "summary" : "List all statuses of task.",
        "description" : "List all statuses of a task. The ID of the task is part of the URL.",
        "operationId" : "get_all_task_statuses",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "task_id",
          "in" : "path",
          "description" : "ID of the task.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Default value is 1 if not supplied.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "items_per_page",
          "in" : "query",
          "description" : "Default value is 500 if not supplied.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "company_id",
          "in" : "query",
          "description" : "Optional param to get task status list of a sub-company. Please reach out to us at dev.support@arrivy.com before you start using this field.",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "example" : "ENROUTE"
                  },
                  "title" : {
                    "type" : "string",
                    "example" : "On Our Way"
                  },
                  "time" : {
                    "type" : "string",
                    "example" : "2016-10-14T08:00:00+01:00"
                  },
                  "reporter_name" : {
                    "type" : "string",
                    "example" : "John"
                  },
                  "reporter_id" : {
                    "type" : "string",
                    "example" : 5348024557502464
                  },
                  "source" : {
                    "type" : "string",
                    "example" : "web"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "INVALID_INPUT"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Invalid task_id"
                }
              }
            }
          },
          "401" : {
            "description" : "Not Authorized",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "UNAUTHORIZED"
                },
                "description" : {
                  "type" : "string",
                  "example" : "Wrong Credentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                },
                "description" : {
                  "type" : "string",
                  "example" : "NOT_FOUND"
                }
              }
            }
          }
        },
        "security" : [ {
          "AuthKey" : [ ],
          "AuthToken" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "AuthKey" : {
      "type" : "apiKey",
      "name" : "X-Auth-Key",
      "in" : "header"
    },
    "AuthToken" : {
      "type" : "apiKey",
      "name" : "X-Auth-Token",
      "in" : "header"
    }
  },
  "definitions" : { }
}